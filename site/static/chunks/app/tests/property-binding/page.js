/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/tests/property-binding/page"],{

/***/ "(app-pages-browser)/./app/tests/property-binding/page.tsx":
/*!*********************************************!*\
  !*** ./app/tests/property-binding/page.tsx ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BasicBindingTest)\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_ts_decorate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @swc/helpers/_/_ts_decorate */ \"(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _chemistry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/chemistry */ \"(app-pages-browser)/./src/chemistry.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\nclass $Child extends _chemistry__WEBPACK_IMPORTED_MODULE_1__.$Chemical {\n    view() {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            style: {\n                border: '2px solid green',\n                padding: '10px',\n                borderRadius: '4px'\n            },\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h4\", {\n                    children: \"Child Component\"\n                }, void 0, false, {\n                    fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n                    lineNumber: 10,\n                    columnNumber: 17\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    children: [\n                        \"Name: \",\n                        this.$name\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n                    lineNumber: 11,\n                    columnNumber: 17\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n            lineNumber: 9,\n            columnNumber: 13\n        }, this);\n    }\n    constructor(...args){\n        super(...args), this.$name = 'Default Child';\n    }\n}\nclass $Parent extends _chemistry__WEBPACK_IMPORTED_MODULE_1__.$Chemical {\n    view() {\n        var _this_child, _this_child1;\n        console.log('Parent.view() - this.child:', this.child);\n        console.log('Parent.view() - this.children:', this.children);\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            style: {\n                border: '2px solid blue',\n                padding: '20px',\n                borderRadius: '8px'\n            },\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                    children: \"Parent Component\"\n                }, void 0, false, {\n                    fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n                    lineNumber: 26,\n                    columnNumber: 17\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    style: {\n                        marginBottom: '10px'\n                    },\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                \"✓ Child bound: \",\n                                this.child ? 'YES' : 'NO'\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n                            lineNumber: 28,\n                            columnNumber: 21\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                \"✓ Child name: \",\n                                ((_this_child = this.child) === null || _this_child === void 0 ? void 0 : _this_child.$name) || 'N/A'\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n                            lineNumber: 29,\n                            columnNumber: 21\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n                    lineNumber: 27,\n                    columnNumber: 17\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    style: {\n                        marginLeft: '20px',\n                        marginTop: '20px'\n                    },\n                    children: (_this_child1 = this.child) === null || _this_child1 === void 0 ? void 0 : _this_child1.view()\n                }, void 0, false, {\n                    fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n                    lineNumber: 31,\n                    columnNumber: 17\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n            lineNumber: 25,\n            columnNumber: 13\n        }, this);\n    }\n}\n(0,_swc_helpers_ts_decorate__WEBPACK_IMPORTED_MODULE_2__.__decorate)([\n    (0,_chemistry__WEBPACK_IMPORTED_MODULE_1__.child)($Child)\n], $Parent.prototype, \"child\", void 0);\nfunction BasicBindingTest() {\n    const Parent = new $Parent().Component; // Access property, not method\n    const Child = new $Child().Component; // Access property, not method\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            padding: '40px',\n            fontFamily: 'system-ui'\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                children: \"Basic Binding Test\"\n            }, void 0, false, {\n                fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n                lineNumber: 45,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                style: {\n                    color: '#666',\n                    marginBottom: '30px'\n                },\n                children: \"Tests that a child component is properly bound to its parent using the @child decorator.\"\n            }, void 0, false, {\n                fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n                lineNumber: 46,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    marginBottom: '20px'\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                        children: \"Expected Results:\"\n                    }, void 0, false, {\n                        fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n                        lineNumber: 51,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                children: 'Parent should show \"Child bound: YES\"'\n                            }, void 0, false, {\n                                fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n                                lineNumber: 53,\n                                columnNumber: 21\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                children: 'Parent should show \"Child name: Test Child\"'\n                            }, void 0, false, {\n                                fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n                                lineNumber: 54,\n                                columnNumber: 21\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                children: \"Child component should be rendered inside parent\"\n                            }, void 0, false, {\n                                fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n                                lineNumber: 55,\n                                columnNumber: 21\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n                        lineNumber: 52,\n                        columnNumber: 17\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n                lineNumber: 50,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    background: '#f5f5f5',\n                    padding: '20px',\n                    borderRadius: '8px'\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Parent, {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Child, {\n                        name: \"Test Child\"\n                    }, void 0, false, {\n                        fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n                        lineNumber: 61,\n                        columnNumber: 21\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n                    lineNumber: 60,\n                    columnNumber: 17\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n                lineNumber: 59,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    marginTop: '30px'\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                        children: \"Test Status:\"\n                    }, void 0, false, {\n                        fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n                        lineNumber: 66,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            padding: '10px',\n                            background: '#d4edda',\n                            color: '#155724',\n                            border: '1px solid #c3e6cb',\n                            borderRadius: '4px'\n                        },\n                        children: \"✓ If you see the child component inside the parent with correct name, the test passes\"\n                    }, void 0, false, {\n                        fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n                        lineNumber: 67,\n                        columnNumber: 17\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n                lineNumber: 65,\n                columnNumber: 13\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/doug/repos/dna-platform/chemistry/app/tests/property-binding/page.tsx\",\n        lineNumber: 44,\n        columnNumber: 9\n    }, this);\n}\n_c = BasicBindingTest;\nvar _c;\n$RefreshReg$(_c, \"BasicBindingTest\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC90ZXN0cy9wcm9wZXJ0eS1iaW5kaW5nL3BhZ2UudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUMrQztBQUUvQyxNQUFNRSxlQUFlRixpREFBU0E7SUFHMUJHLE9BQU87UUFDSCxxQkFDSSw4REFBQ0M7WUFBSUMsT0FBTztnQkFBRUMsUUFBUTtnQkFBbUJDLFNBQVM7Z0JBQVFDLGNBQWM7WUFBTTs7OEJBQzFFLDhEQUFDQzs4QkFBRzs7Ozs7OzhCQUNKLDhEQUFDQzs7d0JBQUU7d0JBQU8sSUFBSSxDQUFDQyxLQUFLOzs7Ozs7Ozs7Ozs7O0lBR2hDOztRQVZKLHFCQUNJQSxRQUFnQjs7QUFVcEI7QUFFQSxNQUFNQyxnQkFBZ0JaLGlEQUFTQTtJQUkzQkcsT0FBTztZQVE2QixhQUduQjtRQVZiVSxRQUFRQyxHQUFHLENBQUMsK0JBQStCLElBQUksQ0FBQ2IsS0FBSztRQUNyRFksUUFBUUMsR0FBRyxDQUFDLGtDQUFrQyxJQUFJLENBQUNDLFFBQVE7UUFDM0QscUJBQ0ksOERBQUNYO1lBQUlDLE9BQU87Z0JBQUVDLFFBQVE7Z0JBQWtCQyxTQUFTO2dCQUFRQyxjQUFjO1lBQU07OzhCQUN6RSw4REFBQ1E7OEJBQUc7Ozs7Ozs4QkFDSiw4REFBQ1o7b0JBQUlDLE9BQU87d0JBQUVZLGNBQWM7b0JBQU87O3NDQUMvQiw4REFBQ2I7O2dDQUFJO2dDQUFnQixJQUFJLENBQUNILEtBQUssR0FBRyxRQUFROzs7Ozs7O3NDQUMxQyw4REFBQ0c7O2dDQUFJO2dDQUFlLG9CQUFJLENBQUNILEtBQUssY0FBViw4Q0FBWVUsS0FBSyxLQUFJOzs7Ozs7Ozs7Ozs7OzhCQUU3Qyw4REFBQ1A7b0JBQUlDLE9BQU87d0JBQUVhLFlBQVk7d0JBQVFDLFdBQVc7b0JBQU87K0JBQy9DLG1CQUFJLENBQUNsQixLQUFLLGNBQVYsZ0RBQVlFLElBQUk7Ozs7Ozs7Ozs7OztJQUlqQztBQUNKOzs7O0FBRWUsU0FBU2lCO0lBQ3BCLE1BQU1DLFNBQVMsSUFBSVQsVUFBVVUsU0FBUyxFQUFHLDhCQUE4QjtJQUN2RSxNQUFNQyxRQUFRLElBQUlyQixTQUFTb0IsU0FBUyxFQUFLLDhCQUE4QjtJQUV2RSxxQkFDSSw4REFBQ2xCO1FBQUlDLE9BQU87WUFBRUUsU0FBUztZQUFRaUIsWUFBWTtRQUFZOzswQkFDbkQsOERBQUNDOzBCQUFHOzs7Ozs7MEJBQ0osOERBQUNmO2dCQUFFTCxPQUFPO29CQUFFcUIsT0FBTztvQkFBUVQsY0FBYztnQkFBTzswQkFBRzs7Ozs7OzBCQUluRCw4REFBQ2I7Z0JBQUlDLE9BQU87b0JBQUVZLGNBQWM7Z0JBQU87O2tDQUMvQiw4REFBQ0Q7a0NBQUc7Ozs7OztrQ0FDSiw4REFBQ1c7OzBDQUNHLDhEQUFDQzswQ0FBRzs7Ozs7OzBDQUNKLDhEQUFDQTswQ0FBRzs7Ozs7OzBDQUNKLDhEQUFDQTswQ0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQUlaLDhEQUFDeEI7Z0JBQUlDLE9BQU87b0JBQUV3QixZQUFZO29CQUFXdEIsU0FBUztvQkFBUUMsY0FBYztnQkFBTTswQkFDdEUsNEVBQUNhOzhCQUNHLDRFQUFDRTt3QkFBTU8sTUFBSzs7Ozs7Ozs7Ozs7Ozs7OzswQkFJcEIsOERBQUMxQjtnQkFBSUMsT0FBTztvQkFBRWMsV0FBVztnQkFBTzs7a0NBQzVCLDhEQUFDSDtrQ0FBRzs7Ozs7O2tDQUNKLDhEQUFDWjt3QkFBSUMsT0FBTzs0QkFDUkUsU0FBUzs0QkFDVHNCLFlBQVk7NEJBQ1pILE9BQU87NEJBQ1BwQixRQUFROzRCQUNSRSxjQUFjO3dCQUNsQjtrQ0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTW5CO0tBeEN3QlkiLCJzb3VyY2VzIjpbIi9ob21lL2RvdWcvcmVwb3MvZG5hLXBsYXRmb3JtL2NoZW1pc3RyeS9hcHAvdGVzdHMvcHJvcGVydHktYmluZGluZy9wYWdlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCdcbmltcG9ydCB7ICRDaGVtaWNhbCwgY2hpbGQgfSBmcm9tICdAL2NoZW1pc3RyeSc7XG5cbmNsYXNzICRDaGlsZCBleHRlbmRzICRDaGVtaWNhbCB7XG4gICAgJG5hbWU6IHN0cmluZyA9ICdEZWZhdWx0IENoaWxkJztcbiAgICBcbiAgICB2aWV3KCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBib3JkZXI6ICcycHggc29saWQgZ3JlZW4nLCBwYWRkaW5nOiAnMTBweCcsIGJvcmRlclJhZGl1czogJzRweCcgfX0+XG4gICAgICAgICAgICAgICAgPGg0PkNoaWxkIENvbXBvbmVudDwvaDQ+XG4gICAgICAgICAgICAgICAgPHA+TmFtZToge3RoaXMuJG5hbWV9PC9wPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5jbGFzcyAkUGFyZW50IGV4dGVuZHMgJENoZW1pY2FsIHtcbiAgICBAY2hpbGQoJENoaWxkKVxuICAgIGNoaWxkITogJENoaWxkO1xuICAgIFxuICAgIHZpZXcoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdQYXJlbnQudmlldygpIC0gdGhpcy5jaGlsZDonLCB0aGlzLmNoaWxkKTtcbiAgICAgICAgY29uc29sZS5sb2coJ1BhcmVudC52aWV3KCkgLSB0aGlzLmNoaWxkcmVuOicsIHRoaXMuY2hpbGRyZW4pO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBib3JkZXI6ICcycHggc29saWQgYmx1ZScsIHBhZGRpbmc6ICcyMHB4JywgYm9yZGVyUmFkaXVzOiAnOHB4JyB9fT5cbiAgICAgICAgICAgICAgICA8aDM+UGFyZW50IENvbXBvbmVudDwvaDM+XG4gICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBtYXJnaW5Cb3R0b206ICcxMHB4JyB9fT5cbiAgICAgICAgICAgICAgICAgICAgPGRpdj7inJMgQ2hpbGQgYm91bmQ6IHt0aGlzLmNoaWxkID8gJ1lFUycgOiAnTk8nfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2PuKckyBDaGlsZCBuYW1lOiB7dGhpcy5jaGlsZD8uJG5hbWUgfHwgJ04vQSd9PC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBtYXJnaW5MZWZ0OiAnMjBweCcsIG1hcmdpblRvcDogJzIwcHgnIH19PlxuICAgICAgICAgICAgICAgICAgICB7dGhpcy5jaGlsZD8udmlldygpfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBCYXNpY0JpbmRpbmdUZXN0KCkge1xuICAgIGNvbnN0IFBhcmVudCA9IG5ldyAkUGFyZW50KCkuQ29tcG9uZW50OyAgLy8gQWNjZXNzIHByb3BlcnR5LCBub3QgbWV0aG9kXG4gICAgY29uc3QgQ2hpbGQgPSBuZXcgJENoaWxkKCkuQ29tcG9uZW50OyAgICAvLyBBY2Nlc3MgcHJvcGVydHksIG5vdCBtZXRob2RcbiAgICBcbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IHN0eWxlPXt7IHBhZGRpbmc6ICc0MHB4JywgZm9udEZhbWlseTogJ3N5c3RlbS11aScgfX0+XG4gICAgICAgICAgICA8aDE+QmFzaWMgQmluZGluZyBUZXN0PC9oMT5cbiAgICAgICAgICAgIDxwIHN0eWxlPXt7IGNvbG9yOiAnIzY2NicsIG1hcmdpbkJvdHRvbTogJzMwcHgnIH19PlxuICAgICAgICAgICAgICAgIFRlc3RzIHRoYXQgYSBjaGlsZCBjb21wb25lbnQgaXMgcHJvcGVybHkgYm91bmQgdG8gaXRzIHBhcmVudCB1c2luZyB0aGUgQGNoaWxkIGRlY29yYXRvci5cbiAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBtYXJnaW5Cb3R0b206ICcyMHB4JyB9fT5cbiAgICAgICAgICAgICAgICA8aDM+RXhwZWN0ZWQgUmVzdWx0czo8L2gzPlxuICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgPGxpPlBhcmVudCBzaG91bGQgc2hvdyBcIkNoaWxkIGJvdW5kOiBZRVNcIjwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5QYXJlbnQgc2hvdWxkIHNob3cgXCJDaGlsZCBuYW1lOiBUZXN0IENoaWxkXCI8L2xpPlxuICAgICAgICAgICAgICAgICAgICA8bGk+Q2hpbGQgY29tcG9uZW50IHNob3VsZCBiZSByZW5kZXJlZCBpbnNpZGUgcGFyZW50PC9saT5cbiAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgYmFja2dyb3VuZDogJyNmNWY1ZjUnLCBwYWRkaW5nOiAnMjBweCcsIGJvcmRlclJhZGl1czogJzhweCcgfX0+XG4gICAgICAgICAgICAgICAgPFBhcmVudD5cbiAgICAgICAgICAgICAgICAgICAgPENoaWxkIG5hbWU9XCJUZXN0IENoaWxkXCIgLz5cbiAgICAgICAgICAgICAgICA8L1BhcmVudD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgXG4gICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IG1hcmdpblRvcDogJzMwcHgnIH19PlxuICAgICAgICAgICAgICAgIDxoMz5UZXN0IFN0YXR1czo8L2gzPlxuICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6ICcxMHB4JywgXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICcjZDRlZGRhJyxcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjMTU1NzI0JyxcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkICNjM2U2Y2InLFxuICAgICAgICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6ICc0cHgnXG4gICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgIOKckyBJZiB5b3Ugc2VlIHRoZSBjaGlsZCBjb21wb25lbnQgaW5zaWRlIHRoZSBwYXJlbnQgd2l0aCBjb3JyZWN0IG5hbWUsIHRoZSB0ZXN0IHBhc3Nlc1xuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICk7XG59Il0sIm5hbWVzIjpbIiRDaGVtaWNhbCIsImNoaWxkIiwiJENoaWxkIiwidmlldyIsImRpdiIsInN0eWxlIiwiYm9yZGVyIiwicGFkZGluZyIsImJvcmRlclJhZGl1cyIsImg0IiwicCIsIiRuYW1lIiwiJFBhcmVudCIsImNvbnNvbGUiLCJsb2ciLCJjaGlsZHJlbiIsImgzIiwibWFyZ2luQm90dG9tIiwibWFyZ2luTGVmdCIsIm1hcmdpblRvcCIsIkJhc2ljQmluZGluZ1Rlc3QiLCJQYXJlbnQiLCJDb21wb25lbnQiLCJDaGlsZCIsImZvbnRGYW1pbHkiLCJoMSIsImNvbG9yIiwidWwiLCJsaSIsImJhY2tncm91bmQiLCJuYW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/tests/property-binding/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fdoug%2Frepos%2Fdna-platform%2Fchemistry%2Fapp%2Ftests%2Fproperty-binding%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!**************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fdoug%2Frepos%2Fdna-platform%2Fchemistry%2Fapp%2Ftests%2Fproperty-binding%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \**************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/tests/property-binding/page.tsx */ \"(app-pages-browser)/./app/tests/property-binding/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmRvdWclMkZyZXBvcyUyRmRuYS1wbGF0Zm9ybSUyRmNoZW1pc3RyeSUyRmFwcCUyRnRlc3RzJTJGcHJvcGVydHktYmluZGluZyUyRnBhZ2UudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsb01BQWdIIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvaG9tZS9kb3VnL3JlcG9zL2RuYS1wbGF0Zm9ybS9jaGVtaXN0cnkvYXBwL3Rlc3RzL3Byb3BlcnR5LWJpbmRpbmcvcGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fdoug%2Frepos%2Fdna-platform%2Fchemistry%2Fapp%2Ftests%2Fproperty-binding%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n true &&\n  (function () {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n        case REACT_ACTIVITY_TYPE:\n          return \"Activity\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_PORTAL_TYPE:\n            return \"Portal\";\n          case REACT_CONTEXT_TYPE:\n            return type.displayName || \"Context\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function getTaskName(type) {\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\n      if (\n        \"object\" === typeof type &&\n        null !== type &&\n        type.$$typeof === REACT_LAZY_TYPE\n      )\n        return \"<...>\";\n      try {\n        var name = getComponentNameFromType(type);\n        return name ? \"<\" + name + \">\" : \"<...>\";\n      } catch (x) {\n        return \"<...>\";\n      }\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function UnknownOwner() {\n      return Error(\"react-stack-top-frame\");\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(\n      type,\n      key,\n      self,\n      source,\n      owner,\n      props,\n      debugStack,\n      debugTask\n    ) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.defineProperty(type, \"_debugStack\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugStack\n      });\n      Object.defineProperty(type, \"_debugTask\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugTask\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      debugStack,\n      debugTask\n    ) {\n      var children = config.children;\n      if (void 0 !== children)\n        if (isStaticChildren)\n          if (isArrayImpl(children)) {\n            for (\n              isStaticChildren = 0;\n              isStaticChildren < children.length;\n              isStaticChildren++\n            )\n              validateChildKeys(children[isStaticChildren]);\n            Object.freeze && Object.freeze(children);\n          } else\n            console.error(\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n            );\n        else validateChildKeys(children);\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function (k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren =\n          0 < keys.length\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\n            : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] ||\n          ((keys =\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n            isStaticChildren,\n            children,\n            keys,\n            children\n          ),\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\n      }\n      children = null;\n      void 0 !== maybeKey &&\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\n      hasValidKey(config) &&\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children &&\n        defineKeyPropWarningGetter(\n          maybeKey,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      return ReactElement(\n        type,\n        children,\n        self,\n        source,\n        getOwner(),\n        maybeKey,\n        debugStack,\n        debugTask\n      );\n    }\n    function validateChildKeys(node) {\n      \"object\" === typeof node &&\n        null !== node &&\n        node.$$typeof === REACT_ELEMENT_TYPE &&\n        node._store &&\n        (node._store.validated = 1);\n    }\n    var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n      REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\"),\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      isArrayImpl = Array.isArray,\n      createTask = console.createTask\n        ? console.createTask\n        : function () {\n            return null;\n          };\n    React = {\n      react_stack_bottom_frame: function (callStackForError) {\n        return callStackForError();\n      }\n    };\n    var specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var unknownOwnerDebugStack = React.react_stack_bottom_frame.bind(\n      React,\n      UnknownOwner\n    )();\n    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));\n    var didWarnAboutKeySpread = {};\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsxDEV = function (\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self\n    ) {\n      var trackActualOwner =\n        1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        isStaticChildren,\n        source,\n        self,\n        trackActualOwner\n          ? Error(\"react-stack-top-frame\")\n          : unknownOwnerDebugStack,\n        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask\n      );\n    };\n  })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIi9ob21lL2RvdWcvcmVwb3MvZG5hLXBsYXRmb3JtL2NoZW1pc3RyeS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs":
/*!******************************************!*\
  !*** ./node_modules/tslib/tslib.es6.mjs ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __addDisposableResource: () => (/* binding */ __addDisposableResource),\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldIn: () => (/* binding */ __classPrivateFieldIn),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __disposeResources: () => (/* binding */ __disposeResources),\n/* harmony export */   __esDecorate: () => (/* binding */ __esDecorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __propKey: () => (/* binding */ __propKey),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __rewriteRelativeImportExtension: () => (/* binding */ __rewriteRelativeImportExtension),\n/* harmony export */   __runInitializers: () => (/* binding */ __runInitializers),\n/* harmony export */   __setFunctionName: () => (/* binding */ __setFunctionName),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArray: () => (/* binding */ __spreadArray),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nfunction __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nfunction __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nfunction __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nfunction __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nfunction __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nfunction __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nfunction __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nvar __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nfunction __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nfunction __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nfunction __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nfunction __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nfunction __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nfunction __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nfunction __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nfunction __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nfunction __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nfunction __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nfunction __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nfunction __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nfunction __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nfunction __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/chemistry.ts":
/*!**************************!*\
  !*** ./src/chemistry.ts ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $Chemical: () => (/* binding */ $Chemical),\n/* harmony export */   child: () => (/* binding */ child),\n/* harmony export */   dynamic: () => (/* binding */ dynamic),\n/* harmony export */   entail: () => (/* binding */ entail),\n/* harmony export */   equate: () => (/* binding */ equate),\n/* harmony export */   fifth: () => (/* binding */ fifth),\n/* harmony export */   first: () => (/* binding */ first),\n/* harmony export */   fourth: () => (/* binding */ fourth),\n/* harmony export */   inert: () => (/* binding */ inert),\n/* harmony export */   optional: () => (/* binding */ optional),\n/* harmony export */   position: () => (/* binding */ position),\n/* harmony export */   second: () => (/* binding */ second),\n/* harmony export */   third: () => (/* binding */ third),\n/* harmony export */   transform: () => (/* binding */ transform),\n/* harmony export */   where: () => (/* binding */ where)\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_ts_decorate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @swc/helpers/_/_ts_decorate */ \"(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ $Chemical,inert,equate,dynamic,entail,transform,child,optional,where,position,first,second,third,fourth,fifth auto */ \n\n// Symbol for tracking reactified objects\nconst reactivated = Symbol('reactivated');\nconst backingFields = Symbol('backingFields');\nconst originalValues = Symbol('originalValues');\nconst deactivated = Symbol('deactivated');\nconst comparerSymbol = Symbol('comparer');\n// Near the top of the file, with other symbols and constants\nconst componentUpdaters = new WeakMap();\n/**\n * Base class for Chemical components\n */ class $Chemical {\n    // Public methods\n    view() {\n        return this.elements;\n    }\n    // Private methods\n    createComponent() {\n        const self = this;\n        const ChemicalComponent = (props)=>{\n            const instance = self.createInstance();\n            const [, forceUpdate] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n                \"ChemicalComponent.useEffect\": ()=>{\n                    self.setupInstance(instance, props, {\n                        \"ChemicalComponent.useEffect\": ()=>forceUpdate({})\n                    }[\"ChemicalComponent.useEffect\"]);\n                    return ({\n                        \"ChemicalComponent.useEffect\": ()=>self.cleanupInstance(instance)\n                    })[\"ChemicalComponent.useEffect\"];\n                }\n            }[\"ChemicalComponent.useEffect\"], []);\n            self.processChildren(instance, props);\n            return instance.view();\n        };\n        ChemicalComponent.isChemical = true;\n        return ChemicalComponent;\n    }\n    createInstance() {\n        const instance = Object.create(this);\n        instance.children = [];\n        return instance;\n    }\n    setupInstance(instance, props, forceUpdate) {\n        this.applyProps(instance, props);\n        this.setupReactivity(instance, forceUpdate);\n        this.handleParentBinding(instance, props);\n        this.runCatalystMethods(instance);\n    }\n    cleanupInstance(instance) {\n        componentUpdaters.delete(instance);\n        if (instance.parent) {\n            this.unregisterFromParent(instance, instance.parent);\n        }\n    }\n    applyProps(instance, props) {\n        if (!props) return;\n        for(const key in props){\n            if (props.hasOwnProperty(key) && key !== 'children' && key !== '__parentInstance') {\n                this.setProp(instance, key, props[key]);\n            }\n        }\n    }\n    setProp(instance, key, value) {\n        const componentKey = '$' + String(key);\n        const transformers = instance.constructor.prototype.transformers;\n        if (transformers === null || transformers === void 0 ? void 0 : transformers.has(componentKey)) {\n            const transformer = transformers.get(componentKey);\n            instance[componentKey] = transformer(value);\n        } else {\n            instance[componentKey] = value;\n        }\n    }\n    setupReactivity(instance, forceUpdate) {\n        componentUpdaters.set(instance, forceUpdate);\n        decorate(instance, {\n            after: (className, memberName, memberType, method, args, result)=>{\n                if (memberType === 'field') {\n                    const updateFn = componentUpdaters.get(instance);\n                    if (updateFn) updateFn();\n                }\n                return result;\n            }\n        });\n    }\n    handleParentBinding(instance, props) {\n        console.log('handleParentBinding called', props);\n        if (!props.__parentInstance) {\n            console.log('No parent instance in props');\n            return;\n        }\n        instance.parent = props.__parentInstance;\n        console.log('Registering child with parent: ' + props.__parentInstance);\n        if (instance.parent) this.registerWithParent(instance, instance.parent);\n    }\n    registerWithParent(child, parent) {\n        this.trackChild(parent, child);\n        this.applyBinding(child, parent);\n    }\n    trackChild(parent, child) {\n        if (!parent.children.includes(child)) {\n            parent.children.push(child);\n        }\n    }\n    untrackChild(parent, child) {\n        const index = parent.children.indexOf(child);\n        if (index >= 0) {\n            parent.children.splice(index, 1);\n        }\n    }\n    applyBinding(child, parent) {\n        const bindings = getBindings(parent);\n        console.log('applyBinding - bindings:', bindings);\n        console.log('applyBinding - child:', child);\n        console.log('applyBinding - parent:', parent);\n        if (!parent.childPositionCounts) {\n            parent.childPositionCounts = new Map();\n        }\n        for (const binding of bindings){\n            if (binding.property === 'children') continue;\n            console.log('Checking binding:', binding);\n            if (this.matchesBinding(child, parent, binding)) {\n                console.log('Binding matched! Applying...');\n                this.bindChild(child, parent, binding);\n                break;\n            }\n        }\n    }\n    matchesBinding(child, parent, binding) {\n        if (!(child instanceof binding.class)) return false;\n        if (binding.position !== undefined) {\n            const count = parent.childPositionCounts.get(binding.class) || 0;\n            if (binding.position !== count) {\n                parent.childPositionCounts.set(binding.class, count + 1);\n                return false;\n            }\n            parent.childPositionCounts.set(binding.class, count + 1);\n        }\n        if (binding.where && !binding.where(child)) return false;\n        return true;\n    }\n    bindChild(child, parent, binding) {\n        const prop = parent[binding.property];\n        if (Array.isArray(prop)) {\n            prop.push(child);\n        } else if (!parent[binding.property]) {\n            parent[binding.property] = child;\n        }\n    }\n    unbindChild(child, parent) {\n        const bindings = getBindings(parent);\n        for (const binding of bindings){\n            if (binding.property === 'children') continue;\n            const prop = parent[binding.property];\n            if (Array.isArray(prop)) {\n                const index = prop.indexOf(child);\n                if (index >= 0) prop.splice(index, 1);\n            } else if (parent[binding.property] === child) {\n                parent[binding.property] = undefined;\n            }\n        }\n    }\n    unregisterFromParent(child, parent) {\n        this.unbindChild(child, parent);\n        this.untrackChild(parent, child);\n    }\n    runCatalystMethods(instance) {\n        const methods = instance.constructor.prototype.catalystMethods;\n        if (!methods) return;\n        for (const methodName of methods){\n            if (typeof instance[methodName] === 'function') {\n                instance[methodName]();\n            }\n        }\n    }\n    processChildren(instance, props) {\n        if (!(props === null || props === void 0 ? void 0 : props.children)) return;\n        const modifiedChildren = this.modifyChildren(instance, props.children);\n        instance.elements = modifiedChildren;\n    }\n    modifyChildren(instance, children) {\n        console.log('modifyChildren called, instance:', instance);\n        const childrenArray = react__WEBPACK_IMPORTED_MODULE_0___default().Children.toArray(children);\n        console.log('childrenArray:', childrenArray);\n        return childrenArray.map((child)=>{\n            if (react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(child) && child.type.isChemical) {\n                console.log('Found Chemical child, adding __parentInstance');\n                return react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(child, {\n                    ...child.props,\n                    __parentInstance: instance\n                });\n            }\n            return child;\n        });\n    }\n    createFragment(above, main, below) {\n        const children = [];\n        if (above) children.push(above);\n        if (main) children.push(main);\n        if (below) children.push(below);\n        return react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, ...children);\n    }\n    // Constructor\n    constructor(){\n        this.children = [];\n        this.Component = this.createComponent();\n    }\n}\n(0,_swc_helpers_ts_decorate__WEBPACK_IMPORTED_MODULE_1__.__decorate)([\n    inert()\n], $Chemical.prototype, \"Component\", void 0);\n(0,_swc_helpers_ts_decorate__WEBPACK_IMPORTED_MODULE_1__.__decorate)([\n    inert()\n], $Chemical.prototype, \"parent\", void 0);\n(0,_swc_helpers_ts_decorate__WEBPACK_IMPORTED_MODULE_1__.__decorate)([\n    inert()\n], $Chemical.prototype, \"children\", void 0);\n(0,_swc_helpers_ts_decorate__WEBPACK_IMPORTED_MODULE_1__.__decorate)([\n    inert()\n], $Chemical.prototype, \"elements\", void 0);\n/**\n * Get merged bindings for a Chemical instance\n */ function getBindings(instance) {\n    const constructor = instance.constructor;\n    // Return cached if available\n    if (constructor._mergedBindings) {\n        return constructor._mergedBindings;\n    }\n    // Build merged map\n    const mergedMap = new Map();\n    // Walk up prototype chain, child bindings override parent\n    let proto = constructor;\n    while(proto && proto !== $Chemical){\n        if (proto.__bindingsMap) {\n            proto.__bindingsMap.forEach((binding, key)=>{\n                // Only add if not already set by child class\n                if (!mergedMap.has(key)) {\n                    mergedMap.set(key, {\n                        ...binding,\n                        property: key\n                    });\n                }\n            });\n        }\n        proto = Object.getPrototypeOf(proto);\n    }\n    // Convert to array, filter invalid, and sort\n    const bindings = [];\n    mergedMap.forEach((binding)=>{\n        if (!binding.class) {\n            console.warn(\"Binding for '\".concat(binding.property, \"' missing @child decorator\"));\n            return;\n        }\n        bindings.push(binding);\n    });\n    // Sort: indexed first, then by index value\n    bindings.sort((a, b)=>{\n        if (a.position !== undefined && b.position === undefined) return -1;\n        if (b.position !== undefined && a.position === undefined) return 1;\n        if (a.position !== undefined && b.position !== undefined) {\n            return a.position - b.position;\n        }\n        return 0;\n    });\n    // Cache and return\n    constructor._mergedBindings = bindings;\n    return bindings;\n}\n/**\n * Reactivates an object, making its properties reactive\n */ function reactivate(instance, owner) {\n    // Already marked as reactivated in component\n    if (instance[reactivated]) {\n        return instance;\n    }\n    instance[reactivated] = true;\n    const triggerUpdate = ()=>{\n        const updateFn = componentUpdaters.get(owner || instance);\n        if (updateFn) updateFn();\n    };\n    decorate(instance, {\n        after: (className, memberName, memberType, method, args, result)=>{\n            if (memberType === 'field') {\n                triggerUpdate();\n            }\n            return result;\n        }\n    });\n    // Only reactify non-Chemical objects\n    for(const key in instance){\n        if (key !== 'constructor' && !key.startsWith('_')) {\n            const value = instance[key];\n            // Skip Chemical instances - they manage themselves\n            if (!(value instanceof $Chemical) && value && typeof value === 'object' && !(value instanceof Date)) {\n                if (Array.isArray(value)) {\n                    value.forEach((item)=>{\n                        if (!(item instanceof $Chemical) && item && typeof item === 'object') {\n                            reactivateData(item, owner || instance);\n                        }\n                    });\n                } else {\n                    reactivateData(value, owner || instance);\n                }\n            }\n        }\n    }\n    return instance;\n}\n/**\n * Reactivates a nested data object in an object or field \n */ function reactivateData(obj, owner) {\n    if (!obj || typeof obj !== 'object' || obj[reactivated] || obj instanceof $Chemical) {\n        return;\n    }\n    reactivate(obj, owner);\n}\n/**\n * Deactivates an object, preventing it from triggering updates\n * This is exported for advanced usage but generally should be used via Chemical.deactivate\n */ function deactivate(instance) {\n    // Mark as deactivated\n    instance[deactivated] = true;\n    return instance;\n}\n/**\n * Decorator to mark a field as inert (non-reactive)\n */ function inert() {\n    return function(target, propertyKey) {\n        // Create or get the inert properties set\n        if (!target[deactivated]) {\n            target[deactivated] = new Set();\n        }\n        // Add this property to the inert set\n        target[deactivated].add(propertyKey);\n    };\n}\n/**\n * Decorator to specify a custom equality comparison for a field\n */ function equate(comparer) {\n    return function(target, propertyKey) {\n        // Create or get the property comparers map\n        if (!target[comparerSymbol]) {\n            target[comparerSymbol] = new Map();\n        }\n        // Add the custom comparer for this property\n        target[comparerSymbol].set(propertyKey, comparer);\n    };\n}\n/**\n * Decorator for properties that should use deep equality comparison\n * Useful for arrays, collections, and complex objects\n */ function dynamic() {\n    return function(target, propertyKey) {\n        // Create or get the property comparers map\n        if (!target[comparerSymbol]) {\n            target[comparerSymbol] = new Map();\n        }\n        // Add a JSON-based deep comparer for this property\n        target[comparerSymbol].set(propertyKey, (a, b)=>{\n            try {\n                return JSON.stringify(a) === JSON.stringify(b);\n            } catch (e) {\n                // If stringify fails (circular refs, etc.), fall back to reference equality\n                return a === b;\n            }\n        });\n    };\n}\n/**\n * Decorator for methods that should run after component rendering\n */ function entail() {\n    return function(target, propertyKey, descriptor) {\n        const originalMethod = descriptor.value;\n        // Create or get the catalysts methods set\n        if (!target.catalystMethods) {\n            target.catalystMethods = new Set();\n        }\n        // Add this method to the catalysts set\n        target.catalystMethods.add(propertyKey);\n        // Return the original descriptor\n        return descriptor;\n    };\n}\n/**\n * Decorator for properties that should run the value through a transformation function\n */ function transform(transformer) {\n    return function(target, propertyKey) {\n        // Create or get the transformers map\n        if (!target.transformers) {\n            target.transformers = new Map();\n        }\n        // Add the transformer for this property\n        target.transformers.set(propertyKey, transformer);\n    };\n}\n/**\n * Decorator for binding a child to a property\n */ function child(ChildClass) {\n    return function(target, propertyKey) {\n        const constructor = target.constructor;\n        if (!constructor.__bindingsMap) constructor.__bindingsMap = new Map();\n        let binding = constructor.__bindingsMap.get(propertyKey);\n        if (!binding) {\n            binding = {\n                property: propertyKey\n            };\n            constructor.__bindingsMap.set(propertyKey, binding);\n        }\n        binding.class = ChildClass;\n        if (binding.optional === undefined) binding.optional = false;\n    };\n}\n/**\n * Decorator for positional child property binding\n */ function optional() {\n    return function(target, propertyKey) {\n        const constructor = target.constructor;\n        if (!constructor.__bindingsMap) constructor.__bindingsMap = new Map();\n        let binding = constructor.__bindingsMap.get(propertyKey);\n        if (!binding) {\n            binding = {\n                property: propertyKey\n            };\n            constructor.__bindingsMap.set(propertyKey, binding);\n        }\n        binding.optional = true;\n    };\n}\n/**\n * Decorator for conditional child property binding\n */ function where(predicate) {\n    return function(target, propertyKey) {\n        const constructor = target.constructor;\n        if (!constructor.__bindingsMap) constructor.__bindingsMap = new Map();\n        let binding = constructor.__bindingsMap.get(propertyKey);\n        if (!binding) {\n            binding = {\n                property: propertyKey\n            };\n            constructor.__bindingsMap.set(propertyKey, binding);\n        }\n        binding.where = predicate;\n    };\n}\n/**\n * Decorator for positional child property binding\n */ function position(n) {\n    return function(target, propertyKey) {\n        const constructor = target.constructor;\n        if (!constructor.__bindingsMap) constructor.__bindingsMap = new Map();\n        let binding = constructor.__bindingsMap.get(propertyKey);\n        if (!binding) {\n            binding = {\n                property: propertyKey\n            };\n            constructor.__bindingsMap.set(propertyKey, binding);\n        }\n        binding.position = n - 1; // 0-based\n    };\n}\n// Convencience child binding decorators for different positions\nconst first = position(1);\nconst second = position(2);\nconst third = position(3);\nconst fourth = position(4);\nconst fifth = position(5);\n/**\n * Decorates an object's methods and properties with interceptors\n */ function decorate(instance, config) {\n    var _instance_constructor;\n    // Skip if already decorated\n    if (instance[reactivated]) {\n        return instance;\n    }\n    var _instance_constructor_name;\n    const className = (_instance_constructor_name = instance === null || instance === void 0 ? void 0 : (_instance_constructor = instance.constructor) === null || _instance_constructor === void 0 ? void 0 : _instance_constructor.name) !== null && _instance_constructor_name !== void 0 ? _instance_constructor_name : \"<UNKNOWN>\";\n    // Store original values\n    instance[backingFields] = {};\n    instance[originalValues] = {};\n    // Process properties and fields\n    decorateProperties(instance, className, config);\n    // Mark as reactified\n    instance[reactivated] = true;\n    return instance;\n}\n/**\n * Decorates properties of an object with interceptors\n */ function decorateProperties(instance, className, config) {\n    const properties = getAllProperties(instance);\n    for (const key of properties){\n        // Skip internal properties and methods we've already processed\n        if (key === 'constructor' || key === String(reactivated) || key === String(backingFields) || key === String(originalValues) || key === 'state' || key === 'props' || typeof instance[key] === 'function' || $Chemical.prototype.hasOwnProperty(key) || // Skip Chemical base class properties\n        instance[key] instanceof $Chemical) {\n            continue;\n        }\n        // Check if this is already an accessor property\n        const descriptor = Object.getOwnPropertyDescriptor(instance, key) || Object.getOwnPropertyDescriptor(Object.getPrototypeOf(instance), key);\n        if (descriptor && (descriptor.get || descriptor.set)) {\n            // Handle accessor property\n            decorateAccessorProperty(instance, key, descriptor, className, config);\n            continue;\n        }\n        // Handle regular data property\n        // Store original value\n        instance[backingFields][key] = instance[key];\n        // Replace with getter/setter for regular properties\n        Object.defineProperty(instance, key, {\n            get: function() {\n                const value = this[backingFields][key];\n                if (config.after) {\n                    const afterResult = config.after(className, key, 'property', ()=>{}, [], value);\n                    return afterResult !== null && afterResult !== void 0 ? afterResult : value;\n                }\n                return value;\n            },\n            set: function(newValue) {\n                const oldValue = this[backingFields][key];\n                // Skip update if values are equal\n                if (oldValue === newValue) {\n                    return;\n                }\n                // Check for custom comparer\n                const proto = Object.getPrototypeOf(this);\n                const hasCustomComparer = proto && proto[comparerSymbol] && proto[comparerSymbol].has(key);\n                if (hasCustomComparer) {\n                    const customComparer = proto[comparerSymbol].get(key);\n                    if (customComparer(oldValue, newValue)) {\n                        return; // Skip update if custom comparer says they're equal\n                    }\n                }\n                let valueToSet = newValue;\n                // Apply before logic if available\n                if (config.before) {\n                    const beforeResult = config.before(className, key, 'field', ()=>{}, [\n                        newValue\n                    ]);\n                    if (beforeResult && beforeResult[1]) {\n                        valueToSet = beforeResult[1][0];\n                    }\n                }\n                // Handle frozen/sealed objects\n                if (valueToSet && typeof valueToSet === 'object') {\n                    // Skip reactification for frozen/sealed objects and Chemical instances\n                    if (!Object.isFrozen(valueToSet) && !Object.isSealed(valueToSet) && Object.isExtensible(valueToSet) && !(valueToSet instanceof $Chemical)) {\n                        // Deep reactify complex objects\n                        if (!Array.isArray(valueToSet) && !(valueToSet instanceof Date)) {\n                            reactivateData(valueToSet, this);\n                        }\n                    }\n                }\n                // Set the new value\n                this[backingFields][key] = valueToSet;\n                // Apply after logic\n                if (config.after) {\n                    config.after(className, key, 'field', ()=>{}, [\n                        valueToSet\n                    ], undefined);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n    }\n}\n/**\n * Decorates an accessor property (getter/setter)\n */ function decorateAccessorProperty(instance, key, descriptor, className, config) {\n    const originalGet = descriptor.get;\n    const originalSet = descriptor.set;\n    Object.defineProperty(instance, key, {\n        get: function() {\n            // Preserve original getter behavior\n            const value = originalGet === null || originalGet === void 0 ? void 0 : originalGet.call(this);\n            if (config.after) {\n                const afterResult = config.after(className, key, 'property', ()=>{}, [], value);\n                return afterResult !== null && afterResult !== void 0 ? afterResult : value;\n            }\n            return value;\n        },\n        set: function(newValue) {\n            if (!originalSet) return; // Read-only property\n            const oldValue = originalGet === null || originalGet === void 0 ? void 0 : originalGet.call(this);\n            // Skip update if values are equal\n            if (oldValue === newValue) {\n                return;\n            }\n            // Check for custom comparer\n            const proto = Object.getPrototypeOf(this);\n            const hasCustomComparer = proto && proto[comparerSymbol] && proto[comparerSymbol].has(key);\n            if (hasCustomComparer) {\n                const customComparer = proto[comparerSymbol].get(key);\n                if (customComparer(oldValue, newValue)) {\n                    return; // Skip update if custom comparer says they're equal\n                }\n            }\n            // Call original setter\n            originalSet.call(this, newValue);\n            // Apply after logic to trigger updates\n            if (config.after) {\n                config.after(className, key, 'field', ()=>{}, [\n                    newValue\n                ], undefined);\n            }\n        },\n        enumerable: descriptor.enumerable,\n        configurable: descriptor.configurable\n    });\n}\n/**\n * Checks if an object is a base object method\n */ function isBaseObjectMethod(methodName) {\n    return Object.prototype.hasOwnProperty.call(Object.prototype, methodName);\n}\n/**\n * Gets all methods from an object and its prototype chain\n */ function getAllMethods(obj) {\n    const methods = {};\n    let proto = obj;\n    while(proto && proto !== Object.prototype){\n        for(const key in proto){\n            if (methods[key]) continue;\n            if (typeof proto[key] === \"function\" && !key.startsWith(\"_\") && // Skip private methods\n            !isBaseObjectMethod(key)) {\n                methods[key] = proto[key];\n            }\n        }\n        proto = proto.__proto__;\n    }\n    return methods;\n}\n/**\n * Gets all properties from an object\n */ function getAllProperties(obj) {\n    const properties = new Set();\n    // Get own properties\n    Object.getOwnPropertyNames(obj).forEach((prop)=>{\n        properties.add(prop);\n    });\n    // Get properties from prototype chain\n    let proto = Object.getPrototypeOf(obj);\n    while(proto && proto !== Object.prototype){\n        Object.getOwnPropertyNames(proto).forEach((prop)=>{\n            if (!prop.startsWith('_') && prop !== 'constructor') {\n                properties.add(prop);\n            }\n        });\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Array.from(properties);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/chemistry.ts\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["main-app"], () => (__webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fdoug%2Frepos%2Fdna-platform%2Fchemistry%2Fapp%2Ftests%2Fproperty-binding%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);